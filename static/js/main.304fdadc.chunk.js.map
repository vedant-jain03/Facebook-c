{"version":3,"sources":["SlidebarRow.jsx","StateProvider.js","Slidebar.jsx","Headerr.jsx","firebase.js","MessageSender.jsx","Story.jsx","StoryReel.jsx","Post.jsx","Feed.jsx","Widget.jsx","reducer.js","Login.jsx","App.js","serviceWorker.js","index.js"],"names":["SlidebarRow","title","src","Icon","className","Avatar","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Slidebar","user","displayName","photoURL","LocalHospitalIcon","EmojiFlagsIcon","PeopleIcon","ChatIcon","StorefrontIcon","VideoLibraryIcon","Headerr","alt","type","placeholder","fontSize","IconButton","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","MessageSender","useState","input","setinput","imageurl","setimageurl","onChange","e","target","onClick","preventDefault","collection","add","message","timestamp","Date","toUTCString","profilePic","username","image","style","color","Story","profileSrc","backgroundImage","StoryReel","Post","islike","setlike","ExpandMoreOutlined","Feed","posts","setPosts","useEffect","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","post","Widget","actionTypes","state","action","console","log","Login","dispatch","signInWithPopup","then","result","catch","error","alert","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.304fdadc.chunk.js","sourcesContent":["import { Avatar,IconButton } from \"@material-ui/core\";\r\nimport React from \"react\"\r\nimport './Slidebar.css'\r\nconst SlidebarRow=({title,src,Icon})=>{\r\n    return(\r\n        <div className=\"slidebarRow\">\r\n            {src && <Avatar src={src} />}\r\n            {Icon && <Icon />}\r\n            <h4>{title}</h4>\r\n        </div>\r\n    )\r\n}\r\nexport default SlidebarRow;","import React, { createContext, useContext, useReducer } from 'react';\r\n\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);","import userEvent from \"@testing-library/user-event\"\r\nimport React from \"react\"\r\nimport './Slidebar.css'\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\nimport EmojiFlagsIcon from '@material-ui/icons/EmojiFlags';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport SlidebarRow from \"./SlidebarRow\"\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport StorefrontIcon from '@material-ui/icons/Storefront';\r\nimport VideoLibraryIcon from '@material-ui/icons/VideoLibrary';\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nconst Slidebar=()=>{\r\n    const [{user},dispatch]=useStateValue();\r\n    return(\r\n        <div className=\"fixed\">\r\n        <div className=\"slidebar\">\r\n             <SlidebarRow title ={user.displayName} src={user.photoURL}/>\r\n             <SlidebarRow title =\"COVID-19 Information Center\" Icon={LocalHospitalIcon} />\r\n             <SlidebarRow title =\"Pages\" Icon={EmojiFlagsIcon} />\r\n             <SlidebarRow title =\"Friends\" Icon={PeopleIcon} />\r\n             <SlidebarRow title =\"Messenger\" Icon={ChatIcon} />\r\n             <SlidebarRow title =\"Market place\" Icon={StorefrontIcon} />\r\n             <SlidebarRow title =\"Videos\" Icon={VideoLibraryIcon} />\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Slidebar;","import React from \"react\"\r\nimport './Header.css'\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport FlagIcon from '@material-ui/icons/Flag';\r\nimport StorefrontOutlinedIcon from '@material-ui/icons/StorefrontOutlined';\r\nimport SupervisorAccountOutlinedIcon from '@material-ui/icons/SupervisorAccountOutlined';\r\nimport SubscriptionsOutlinedIcon from '@material-ui/icons/SubscriptionsOutlined';\r\nimport { Avatar,IconButton } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport ForumIcon from \"@material-ui/icons/Forum\";\r\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nconst Headerr=()=>{\r\n    const [{user},dispatch]=useStateValue();\r\n    return(\r\n        <div className=\"header\">\r\n            <div className=\"header_left\">\r\n                <img src=\"https://facebookbrand.com/wp-content/uploads/2019/04/f_logo_RGB-Hex-Blue_512.png?w=512&h=512\" alt=\"\"/>\r\n                <div className=\"header_input\">\r\n                🔎<input type=\"text\" placeholder=\"  Search FaceBook\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"header_center\">\r\n                <div className=\"header_option header_option_active\">\r\n                    <HomeIcon fontSize=\"large\" />\r\n                </div>\r\n                <div className=\"header_option\">\r\n                <FlagIcon fontSize=\"large\"/>\r\n                </div>\r\n                <div className=\"header_option\">\r\n                    <StorefrontOutlinedIcon fontSize=\"large\"/>\r\n                </div>\r\n                <div className=\"header_option\">\r\n                    <SupervisorAccountOutlinedIcon fontSize=\"large\"/>\r\n                </div>\r\n                <div className=\"header_option\">\r\n                    <SubscriptionsOutlinedIcon fontSize=\"large\"/>\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"header_right\">\r\n                <div className=\"header_info\">\r\n                    <Avatar src={user.photoURL} />\r\n                    <h4>{user.displayName}</h4>\r\n                </div>\r\n                <IconButton>\r\n                    <AddIcon />\r\n                </IconButton>\r\n                <IconButton>\r\n                    <ForumIcon />\r\n                </IconButton>\r\n                <IconButton>\r\n                    <NotificationsActiveIcon />\r\n                </IconButton>\r\n                <IconButton>\r\n                    <ExpandMoreIcon />\r\n                </IconButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Headerr;","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\nimport firebase from \"firebase\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyB1So5wuLMaZeApbg32Jd85GaQl3EGRSLk\",\r\n    authDomain: \"fb-clone-b3e47.firebaseapp.com\",\r\n    projectId: \"fb-clone-b3e47\",\r\n    storageBucket: \"fb-clone-b3e47.appspot.com\",\r\n    messagingSenderId: \"662643925684\",\r\n    appId: \"1:662643925684:web:bdfde8f0a208be876bade1\",\r\n    measurementId: \"G-MFECV0CHCX\"\r\n  };\r\n\r\nconst firebaseApp=firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth=firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {auth,provider};\r\nexport default db;","import React, { useState } from \"react\"\r\nimport './MessageSender.css'\r\nimport { Avatar,IconButton } from \"@material-ui/core\";\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport firebase from \"./firebase\";\r\nimport db from \"./firebase\"\r\nconst MessageSender=()=>{\r\n    \r\n    const [{user},dispatch]=useStateValue();\r\n    const [input,setinput]=useState(\"\");\r\n    const [imageurl,setimageurl]=useState(\"\");\r\n    const handlesubmit=(e)=>{\r\n        e.preventDefault();\r\n        db.collection(\"posts\").add({\r\n            message:input,\r\n            timestamp: new Date().toUTCString(),\r\n            profilePic: user.photoURL,\r\n            username: user.displayName,\r\n            image: imageurl\r\n        })\r\n        setinput(\"\");\r\n        setimageurl(\"\");\r\n    }\r\n    const set=(e)=>{\r\n        setinput(e.target.value);\r\n    }\r\n    const seturl=e=>{\r\n        setimageurl(e.target.value);\r\n    }\r\n    return(\r\n\r\n        <div className=\"MessageSender\">\r\n            <div className=\"MessageSender_top\">\r\n                <Avatar src={user.photoURL} />\r\n                <form>\r\n                    <input className=\"MessageSender_input\" placeholder={`What's On your Mind?, ${user.displayName}`} value={input} onChange={set} />\r\n                    <input type=\"text\" placeholder={\"Give your image URL\"} value={imageurl} onChange={seturl} />\r\n                    <button onClick={handlesubmit} type=\"submit\">\r\n                        Hidden Submit\r\n                    </button>\r\n                </form>\r\n            </div>\r\n            <div className=\"MessageSender_bottom\">\r\n                <div className=\"MessageSender_option\">\r\n                    <VideocamIcon style={{color:'red'}}/>\r\n                    <h3>Live Video</h3>\r\n                </div>\r\n                <div className=\"MessageSender_option\">\r\n                    <PhotoLibraryIcon style={{color:'green'}}/>\r\n                    <h3>Photo/Video</h3>\r\n                </div>\r\n                <div className=\"MessageSender_option\">\r\n                    <InsertEmoticonIcon style={{color:'yellow'}}/>\r\n                    <h3>Feeling/Activity</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default MessageSender;","import React from \"react\"\r\nimport \"./Story.css\"\r\nimport { Avatar,IconButton } from \"@material-ui/core\";\r\n\r\nconst Story=({image,profileSrc,title})=>{\r\n    return(\r\n        <div style={{ backgroundImage: `url(${image})` }} className=\"story\">\r\n            <Avatar src={profileSrc} className=\"story_avatar\" />\r\n            <h4>{title}</h4>\r\n        </div>\r\n    )\r\n}\r\nexport default Story;","import React from \"react\"\r\nimport './Storyreel.css'\r\nimport { Avatar,IconButton } from \"@material-ui/core\";\r\nimport Story from \"./Story\"\r\nconst StoryReel=()=>{\r\n    return (\r\n        <div className=\"Storyreel\">\r\n            <Story \r\n              title=\"Vedant   Jain\"\r\n              image=\"https://picsum.photos/150/250\"\r\n              profileSrc=\"https://picsum.photos/100/100\"\r\n            />\r\n            <Story \r\n              title=\"Yashika Jotwani\"\r\n              image=\"https://picsum.photos/150/350\"\r\n              profileSrc=\"https://picsum.photos/100/200\"\r\n            />\r\n            <Story \r\n              title=\"Sanya Verma\"\r\n              image=\"https://picsum.photos/250/250\"\r\n              profileSrc=\"https://picsum.photos/300/100\"\r\n            />\r\n            <Story \r\n              title=\"Yashraj Pachori\"\r\n              image=\"https://picsum.photos/100/200\"\r\n              profileSrc=\"https://picsum.photos/100/300\"\r\n            />\r\n            <Story \r\n              title=\"Vaibhav Sen\"\r\n              image=\"https://picsum.photos/150/450/\"\r\n              profileSrc=\"https://picsum.photos/200/200\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default StoryReel;","import React, { useEffect , useState } from \"react\"\r\nimport \"./Post.css\"\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport NearMeIcon from '@material-ui/icons/NearMe';\r\nimport { ExpandMoreOutlined } from \"@material-ui/icons\";\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nconst Post=({profilePic,image,username,timestamp,message})=>{\r\n\r\n    const[islike,setlike]=useState(false);\r\n    return(\r\n        <div className=\"Post\">\r\n            <div className=\"Post_top\">\r\n                <Avatar src={profilePic} className=\"Post_avatar\" />\r\n                <div className=\"Post_topInfo\">\r\n                    <h3>{username}</h3>\r\n                    <p>{new Date(timestamp).toUTCString()}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"Post_bottom\">\r\n                <p>{message}</p>\r\n            </div>\r\n            <div className=\"Post_image\">\r\n                <img src={image} />\r\n            </div>\r\n            <div className=\"Post_options\">\r\n                <div className={islike?\"Post_option liked\":\"Post_option\"} onClick={()=>setlike(!islike)} >\r\n                    <ThumbUpIcon />\r\n                    <p onClick={{color:'blue'}}>{islike?\"Liked\":\"Like\"}</p>\r\n                </div>\r\n                <div className=\"Post_option\">\r\n                    <ChatBubbleOutlineIcon />\r\n                    <p>Comment</p>\r\n                </div>\r\n                <div className=\"Post_option\">\r\n                    <NearMeIcon />\r\n                    <p>Share</p>\r\n                </div>\r\n                <div className=\"Post_option\">\r\n                    <AccountCircleIcon />\r\n                    <ExpandMoreOutlined />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Post;","import React,{useEffect, useState} from \"react\"\r\nimport './feed.css'\r\nimport MessageSender from \"./MessageSender\"\r\nimport StoryReel from \"./StoryReel\"\r\nimport Post from \"./Post\"\r\nimport db from \"./firebase\"\r\nimport firebase from \"./firebase\"\r\nconst Feed=()=>{\r\n    const [posts,setPosts]=useState([]);\r\n    useEffect(() => {\r\n        db.collection('posts').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\r\n          setPosts(snapshot.docs.map(doc => ({ id: doc.id, data: doc.data()})))\r\n        })\r\n      }, [])\r\n    // return(\r\n    //     <div className=\"feed\">\r\n    //         <StoryReel />\r\n    //         <MessageSender />\r\n    //         {posts.map((pos)=>{\r\n    //             <Post\r\n    //             key={pos.id}\r\n    //             profilePic={pos.data.profilePic}\r\n    //             message={pos.data.message}\r\n    //             timestamp={pos.data.timestamp}\r\n    //             username={pos.data.username}\r\n    //             image={pos.data.image}\r\n    //             />\r\n    //         })}\r\n    //     </div>\r\n    // )\r\n    return (\r\n        <div className=\"feed\">\r\n          <StoryReel />\r\n          <MessageSender />\r\n          {posts.map(post => (\r\n          <Post\r\n            key={post.data.id}\r\n            profilePic={post.data.profilePic}\r\n            message={post.data.message}\r\n            timestamp={post.data.timestamp}\r\n            username={post.data.username}\r\n            image={post.data.image}\r\n          />\r\n          ))}\r\n        </div>\r\n      );\r\n}\r\nexport default Feed;","import React from \"react\"\r\nimport './Widget.css'\r\nconst Widget=()=>{\r\n    return(\r\n        <div className=\"Widget\">\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default Widget;","export const initialState = {\r\n    user: null,\r\n  };\r\n  \r\n  export const actionTypes = {\r\n    SET_USER: 'SET_USER',\r\n  };\r\n  \r\n  const reducer = (state, action) => {\r\n    console.log(action);\r\n    switch (action.type) {\r\n      case actionTypes.SET_USER:\r\n        return {\r\n          ...state,\r\n          user: action.user,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default reducer;","import { Button } from \"@material-ui/core\"\r\nimport React from \"react\"\r\nimport \"./Login.css\"\r\nimport {auth,provider} from \"./firebase\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport {actionTypes } from \"./reducer\";\r\n\r\nconst Login=()=>{\r\n    const [state,dispatch]=useStateValue();\r\n    const signin=()=>{\r\n        // jb\r\n        auth\r\n        .signInWithPopup(provider)\r\n        .then((result)=>{\r\n            dispatch({\r\n                type:actionTypes.SET_USER,\r\n                user: result.user,\r\n            })\r\n            console.log(result.user);\r\n        })\r\n        .catch((error)=>alert(error.message));\r\n    };\r\n    return(\r\n        <div className=\"login\">\r\n            <div className=\"login_logo\">\r\n            <img src=\"https://facebookbrand.com/wp-content/uploads/2019/04/f_logo_RGB-Hex-Blue_512.png?w=512&h=512\" alt=\"\"/>\r\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/8/89/Facebook_Logo_%282019%29.svg/1280px-Facebook_Logo_%282019%29.svg.png\" alt=\"\"/>\r\n            </div>\r\n            <button onClick={signin} type=\"submit\" >Sign In</button>\r\n        </div>\r\n    )\r\n}\r\nexport default Login;","import React from \"react\"\nimport './App.css';\nimport Slidebar from \"./Slidebar\"\nimport Headerr from \"./Headerr\"\nimport Feed from \"./Feed\"\nimport Widget from \"./Widget\"\nimport Login from \"./Login\"\nimport { useStateValue } from \"./StateProvider\";\n\nfunction App() {\n  const [{ user }, dispatch] = useStateValue();\n  return (\n    <div className=\"App\">\n\n      {\n        !user ? (\n          <Login />\n        ) : (\n          <>\n            <Headerr />\n            <div className=\"app_body\">\n              <Slidebar />\n              <Feed />\n              <Widget />\n            </div>\n          </>\n        )\n      }\n\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StateProvider } from './StateProvider';\nimport reducer, { initialState } from './reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}